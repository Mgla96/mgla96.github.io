<!DOCTYPE html>
<!-- saved from url=(0032)http://127.0.0.1:5500/about.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script type="text/javascript" async="" src="./Matt Gottlieb_files/analytics.js"></script><script async="" src="./Matt Gottlieb_files/js"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-162546155-1');
    </script>
    
    <title>Matt Gottlieb</title>
    <link rel="stylesheet" href="./Matt Gottlieb_files/style.css">
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="./Matt Gottlieb_files/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <!-- Scroll Animations -->
    <link rel="stylesheet" href="./Matt Gottlieb_files/aos.css">
    <!-- Fonts-->
    <link href="./Matt Gottlieb_files/all.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no, shrink-to-fit=no">
<style>html > div ~ div:last-of-type { display: none !important }</style><link rel="stylesheet" type="text/css" href="chrome-extension://fleenceagaplaefnklabikkmocalkcpo/assets/fonts/MyFontsWebfontsKit.css"><meta name="lollix"></head>

<body data-gr-c-s-loaded="true">

    <!--navbar -->
    <nav class="navbar navbar-light bg-light shadow fixed-top navbar-expand-lg">
        <div class="container">
            <a class="navbar-brand" href="http://127.0.0.1:5500/index.html">
                <img src="./Matt Gottlieb_files/mattlogoblack.svg" width="150" height="auto" alt="">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="http://127.0.0.1:5500/index.html#home">
                            <ion-icon style="margin-right: 5px" name="home"></ion-icon>Home
                        </a>
                    </li>
                    <li class="nav-item active">
                        <a class="nav-link" href="http://127.0.0.1:5500/about.html#about">
                            <ion-icon style="margin-right: 5px" name="person"></ion-icon>About
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="http://127.0.0.1:5500/index.html#projects">
                            <ion-icon style="margin-right: 5px" name="hammer"></ion-icon>Projects
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="http://127.0.0.1:5500/resume.html#resume">
                            <ion-icon style="margin-right: 5px" name="document"></ion-icon>Resume
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="http://127.0.0.1:5500/index.html#contact">
                            <ion-icon style="margin-right: 5px" name="mail"></ion-icon>Contact
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <script src="./Matt Gottlieb_files/three.js"></script>
    <!-- <script src="js/PointerLockControls.js"></script> -->
    <script src="./Matt Gottlieb_files/OrbitControls.js"></script>
    <script src="./Matt Gottlieb_files/PointerLockControls.js"></script>
    <script src="./Matt Gottlieb_files/GLTFLoader.js"></script>
    <script>
        //import * as THREE from 'three.js';
       // function init(){
        var scene = new THREE.Scene();
            //var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        var camera = new THREE.PerspectiveCamera(55, window.innerWidth / window.innerHeight, 45, 30000);
        camera.position.set(-900, -200, -900);
        renderer=new THREE.WebGLRenderer({antialias:true});
        var canvas = document.createElement('canvas');
        var context = canvas.getContext('webgl2', { alpha: true });
        var renderer = new THREE.WebGLRenderer({ canvas: canvas, context: context });
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        controls = new THREE.OrbitControls(camera, renderer.domElement);
        controls.addEventListener('change', renderer);

        let materialArray = [];
        let texture_ft = new THREE.TextureLoader().load('css/images/skybox2/yonder_ft.jpg');
        let texture_bk = new THREE.TextureLoader().load('css/images/skybox2/yonder_bk.jpg');
        let texture_up = new THREE.TextureLoader().load('css/images/skybox2/yonder_up.jpg');
        let texture_dn = new THREE.TextureLoader().load('css/images/skybox2/yonder_dn.jpg');
        let texture_rt = new THREE.TextureLoader().load('css/images/skybox2/yonder_rt.jpg');
        let texture_lf = new THREE.TextureLoader().load('css/images/skybox2/yonder_lf.jpg');

        materialArray.push(new THREE.MeshBasicMaterial({map: texture_ft}));
        materialArray.push(new THREE.MeshBasicMaterial({map: texture_bk}));
        materialArray.push(new THREE.MeshBasicMaterial({map: texture_up}));
        materialArray.push(new THREE.MeshBasicMaterial({map: texture_dn}));
        materialArray.push(new THREE.MeshBasicMaterial({map: texture_rt}));
        materialArray.push(new THREE.MeshBasicMaterial({map: texture_lf}));

        for(let i=0; i<6; i++)
            materialArray[i].side = THREE.BackSide;


        let skyboxGeo = new THREE.BoxGeometry(10000,10000,10000);
        let skybox = new THREE.Mesh(skyboxGeo, materialArray);
        scene.add(skybox);

        window.addEventListener('resize', function () {
            var width = window.innerWidth;
            var height = window.innerHeight;
            renderer.setSize(width, height);
            camera.aspect = width / height;
            camera.updateProjectionMatrix();
        });
        
    
        /*
        var cubeMaterial = new THREE.MeshFaceMaterial(cubeMaterials);
        var cube = new THREE.Mesh(geometry, cubeMaterial);
        scene.add(cube);
        var ambientLight = new THREE.AmbientLight(0xFFFFFF, 0.3);
        */
        /*
        var loader = new THREE.GLTFLoader();
        loader.load('path/to/model.glb', function (gltf) {
            scene.add(gltf.scene);
        }, undefined, function (error) {
            console.error(error);
        });
        */
        
        var geometry = new THREE.CylinderGeometry();
        var material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe:true });
        var cube = new THREE.Mesh(geometry, material);
        scene.add(cube);
        

        camera.position.z = 5;
        //var ambientLight = new THREE.Ambientlight(0xFFFFFF, 0.8);
        
        var animate = function () {
            renderer.render(scene, camera);
            requestAnimationFrame(animate);

            cube.rotation.x += 0.01;
            cube.rotation.y += 0.01;
        
           //bgMesh.position.copy(camera.position);
           //renderer.render(bgScene, camera);
        };
        
        /** WEBGL check to see if compatible with user device
        * @author alteredq / http://alteredqualia.com/
        * @author mrdoob / http://mrdoob.com/
        */

        var WEBGL = {
            isWebGLAvailable: function () {
                try {
                    var canvas = document.createElement('canvas');
                    return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));
                } catch (e) {
                    return false;
                }
            },
            isWebGL2Available: function () {
                try {
                    var canvas = document.createElement('canvas');
                    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));
                } catch (e) {
                    return false;
                }
            },
            getWebGLErrorMessage: function () {
                return this.getErrorMessage(1);
            },
            getWebGL2ErrorMessage: function () {
                return this.getErrorMessage(2);
            },
            getErrorMessage: function (version) {
                var names = {
                    1: 'WebGL',
                    2: 'WebGL 2'
                };
                var contexts = {
                    1: window.WebGLRenderingContext,
                    2: window.WebGL2RenderingContext
                };
                var message = 'Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>';
                var element = document.createElement('div');
                element.id = 'webglmessage';
                element.style.fontFamily = 'monospace';
                element.style.fontSize = '13px';
                element.style.fontWeight = 'normal';
                element.style.textAlign = 'center';
                element.style.background = '#fff';
                element.style.color = '#000';
                element.style.padding = '1.5em';
                element.style.width = '400px';
                element.style.margin = '5em auto 0';
                if (contexts[version]) {
                    message = message.replace('$0', 'graphics card');
                } else {
                    message = message.replace('$0', 'browser');
                }
                message = message.replace('$1', names[version]);
                element.innerHTML = message;
                return element;
            }

        };

        //import { WEBGL } from 'js/WebGL.js';

        //import { WEBGL } from 'js/WebGL.js';
        if (WEBGL.isWebGL2Available() === false) {
            document.body.appendChild(WEBGL.getWebGL2ErrorMessage());
        }
        else {
            animate();
        }







    </script><canvas width="1594" height="786" tabindex="0" style="width: 1594px; height: 786px;"></canvas>

    <!--
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/particlesjs/2.2.3/particles.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>
    <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script type="text/javascript">
        window.onload = function () {
            Particles.init({
                selector: '.background',
                maxParticles: 400,
                color: '#ffdf00',
                connectParticles: false,
                responsive: [
                    {
                        breakpoint: 768,
                        options: {
                            maxParticles: 220,
                            color: '#ffdf00',
                            connectParticles: false
                        }
                    }, {
                        breakpoint: 425,
                        options: {
                            maxParticles: 130,
                            connectParticles: false,
                            color: '#ffdf00'
                        }
                    }, {
                        breakpoint: 320,
                        options: {
                            maxParticles: 60,
                            connectParticles: false,
                            color: '#ffdf00'
                        }
                    }
                ]
            });
        };
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/2.0.2/anime.min.js"></script>
    <script>
        AOS.init();
    </script>
    <script src="https://unpkg.com/ionicons@5.0.0/dist/ionicons.js"></script>
    <script>
        $(".nav-item .nav-link").on("click", function () {
            $(".nav-item").find(".active").removeClass("active");
            $(this).addClass("active");
        });
    </script>
    -->


<!-- Code injected by live-server -->
<script type="text/javascript">
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>




<!--
Scooter	#31bacf	Primary
Charade	#2f323f	Info
Ocean Green	c	Success
Roti	#c1a23e	Warning
Pomegranate	#f44336	Danger
$primary: #31bacf; 
$info: #2f323f;
$success: #2f323f; 
$warning: #c1a23e;
$danger: #f44336;
--><ins id="lolli-detect-t" class="adsbox pub_300x250 pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text-ads adglare-ad-server text-ad-links lolli_ad" style="height: 10px; width: 10px; position: absolute; display: block; left: -9999em; top: -9999em;">&nbsp;</ins></body></html>